% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SDA-spatial.R
\name{SDA_spatialQuery}
\alias{SDA_spatialQuery}
\title{SDA Spatial Query}
\usage{
SDA_spatialQuery(geom, what = "mukey", geomIntersection = FALSE)
}
\arguments{
\item{geom}{a Spatial* object, with valid CRS. May contain multiple features.}

\item{what}{a character vector specifting what to return. `mukey`: `data.frame` with intersecting map unit keys and names, `geom` overlapping or intersecting map unit polygons}

\item{geomIntersection}{logical; FALSE: overlapping map unit polygons returned, TRUE: intersection of `geom` + map unit polygons is returned.}
}
\value{
A `data.frame` if `what` is 'mukey', otherwise `SpatialPolygonsDataFrame` object.
}
\description{
Query SDA (SSURGO / STATSGO) records via spatial intersection with supplied geometries. Input can be SpatialPoints, SpatialLines, or SpatialPolygons objects with a valid CRS. Map unit keys, overlapping polygons, or the spatial intersectionion of `geom` + SSURGO polygons can be returned. See details.
}
\details{
Queries for map unit keys are always more efficient vs. queries for overlapping or intersecting (i.e. least efficient) features. `geom` is converted to GCS / WGS84 as needed.

There is a 100,000 record limit and 32Mb JSON serializer limit, per query.

SSURGO (detailed soil survey) and STATSGO (generalized soil survey) data are stored together within SDA. This means that queries that don't specify an area symbol may result in a mixture of SSURGO and STATSGO records. See the examples below and the \href{http://ncss-tech.github.io/AQP/soilDB/SDA-tutorial.html}{SDA Tutorial} for details.
}
\note{
Row-order is not preserved across features in `geom` and returned object. Use `sp::over()` or similar functionality to extract from results.
}
\examples{
\donttest{
if(requireNamespace("curl") &
   curl::has_internet() & 
   requireNamespace("sp")) {

   library(aqp)
   library(sp)

# example point
p <- SpatialPoints(cbind(x=-119.72330, y = 36.92204), proj4string = CRS('+proj=longlat +datum=WGS84'))

# query map unit records at this point
res <- SDA_spatialQuery(p, what = 'mukey')

# convert results into an SQL "IN" statement
# useful when there are multiple intersecting records
mu.is <- format_SQL_in_statement(res$mukey)

# composite SQL WHERE clause
sql <- sprintf("mukey IN \%s", mu.is)

# get commonly used map unit / component / chorizon records
# as a SoilProfileCollection object
# confusing but essential: request that results contain `mukey`
# with `duplicates = TRUE`
x <- fetchSDA(sql, duplicates = TRUE)

# safely set texture class factor levels
# by making a copy of this column
# this will save in lieu of textures in the original
# `texture` column
horizons(x)$texture.class <- factor(x$texture, levels = SoilTextureLevels())

# graphical depiction of the result
plotSPC(x, color='texture.class', label='compname', 
        name='hzname', cex.names = 1, width=0.25, 
        plot.depth.axis=FALSE, hz.depths=TRUE, 
        name.style='center-center'
)
   
 }
}
}
\seealso{
\code{\link{SDA_query}}
}
\author{
D.E. Beaudette
}
\keyword{manip}
